/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.5.1/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

// Versions of used dependencies
def dep_versions = [
    jetty : '11.0.12',
    jsp: '4.0.1',
    jstl: '11.0.0',
    gson : '2.10',
    slf4j : '2.0.3',
    mockachino : '0.8.0',
    junit : '4.13.2'
]

dependencies {
    // Gson
    implementation      group: 'com.google.code.gson', name: 'gson', version: dep_versions.gson

    // Slf4j
    implementation      group: 'org.slf4j', name: 'slf4j-api', version: dep_versions.slf4j
    implementation      group: 'org.slf4j', name: 'slf4j-simple', version: dep_versions.slf4j

    // Jetty
    implementation      group: 'org.eclipse.jetty', name: 'jetty-http', version: dep_versions.jetty
    implementation      group: 'org.eclipse.jetty', name: 'jetty-server', version: dep_versions.jetty
    implementation      group: 'org.eclipse.jetty', name: 'jetty-webapp', version: dep_versions.jetty
    implementation      group: 'org.eclipse.jetty', name: 'jetty-servlet', version: dep_versions.jetty
    implementation      group: 'org.eclipse.jetty', name: 'jetty-plus', version: dep_versions.jetty
    implementation      group: 'org.eclipse.jetty', name: 'jetty-annotations', version: dep_versions.jetty
    implementation      group: 'org.eclipse.jetty', name: 'apache-jsp', version: dep_versions.jetty
    implementation      group: 'org.eclipse.jetty', name: 'apache-jstl', version: dep_versions.jstl
    implementation      group: 'javax.servlet', name: 'javax.servlet-api', version: dep_versions.jsp

    // Mockachino
    testImplementation  group: 'se.mockachino', name: 'mockachino', version: dep_versions.mockachino

    // Use JUnit test framework.
    testImplementation  group: 'junit', name: 'junit', version: dep_versions.junit
}

application {
    // Define the main class for the application.
    mainClass = 'com.king.worktest.Starter'
}

compileJava {
	dependsOn 'copyToLib'
}

sourceSets {
    main {
        java {
            srcDir 'src'
        }
        // The web/ folder must have its content available as a resource
        resources {
            srcDirs "conf", "../shared/resources", "web"
        }
    }
    test {
        java {
            // Avoids issue where the declared package 'com.king.worktest' does not match the expected package 'src.com.king.worktest'
            srcDir 'test/src'
        }
    }
}

task copyToLib(type: Copy) {
   into "$buildDir/lib"
  from configurations.runtimeClasspath
}