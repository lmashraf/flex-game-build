/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.5.1/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

// Versions of used dependencies
def dep_versions = [
    jetty : '9.2.2.v20140723',
    jasper : '6.0.53',
    gson : '2.10',
    logback : '0.5',
    slf4j : '2.0.3',
    mockachino : '0.8.0',
    junit : '4.13.2'
 ]


dependencies {
    // Gson
    implementation      group: 'com.google.code.gson', name: 'gson', version: dep_versions.gson

    // Logback
    implementation      group: 'ch.qos.logback', name: 'logback', version: dep_versions.logback

    // Slf4j
    implementation      group: 'org.slf4j', name: 'slf4j-api', version: dep_versions.slf4j
    implementation      group: 'org.slf4j', name: 'slf4j-simple', version: dep_versions.slf4j

    // Jasper
    implementation      group: 'org.apache.tomcat', name: 'jasper', version: dep_versions.jasper

    // Jetty
    implementation      group: 'org.eclipse.jetty', name: 'jetty-webapp', version: dep_versions.jetty
    implementation      group: 'org.eclipse.jetty', name: 'jetty-plus', version: dep_versions.jetty
    implementation      group: 'org.eclipse.jetty', name: 'jetty-jsp', version: dep_versions.jetty
    implementation      group: 'org.eclipse.jetty', name: 'jetty-annotations', version: dep_versions.jetty

    // Mockachino
    testImplementation  group: 'se.mockachino', name: 'mockachino', version: dep_versions.mockachino

    // Use JUnit test framework.
    testImplementation  group: 'junit', name: 'junit', version: dep_versions.junit

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:31.0.1-jre'
}

application {
    // Define the main class for the application.
    mainClass = 'com.king.worktest.Starter'
}


sourceSets {
    main {
        java {
            srcDir 'src'
        }
        resources {
            srcDirs './conf', '../shared/resources'
        }
    }
    test {
        java {
            // Fixes issue where the declared package "com.king.worktest" does not match the expected package "src.com.king.worktest"
            srcDir 'test/src'
        }
    }
}

task runApp(type: JavaExec) {
  classpath = sourceSets.main.runtimeClasspath

  mainClass = 'com.king.worktest.Starter'
}

/*
task syncLibs(type: Sync) {
  from configurations.runtime
  into "$buildDir/libs"
}*/